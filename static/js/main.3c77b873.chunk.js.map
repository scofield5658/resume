{"version":3,"sources":["Components/Header.jsx","Components/Footer.jsx","Components/About.jsx","Components/Resume.jsx","Components/Portfolio.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Header","data","this","props","name","occupation","networks","social","map","network","key","href","url","className","id","title","PureComponent","defaultProps","Footer","About","email","image","bio","address","profilepic","process","home","city","src","alt","Resume","educations","works","skills","educationComponent","education","school","degree","graduated","description","workComponent","work","company","years","location","skillsComponent","skill","toLowerCase","style","width","level","Portfolio","handleProjectJump","window","open","console","log","projects","project","projectImage","onClick","category","App","state","resumeData","infos","main","resume","portfolio","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c77b873.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Header extends PureComponent {\n  render() {\n    const { data } = this.props;\n    const { name, occupation, social } = data;\n    const networks = social.map((network) => (\n      <li key={network.name}>\n        <a href={network.url}>\n          <i className={network.className} />\n        </a>\n      </li>\n    ));\n\n    return (\n      <header id=\"home\">\n\n        <nav id=\"nav-wrap\">\n\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n          <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n            <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n            <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n          </ul>\n\n        </nav>\n\n        <div className=\"row banner\">\n          <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">{name}</h1>\n            <h3><span>{occupation}</span></h3>\n            <hr />\n            <ul className=\"social\">\n              {networks}\n            </ul>\n          </div>\n        </div>\n\n        <p className=\"scrolldown\">\n          <a className=\"smoothscroll\" href=\"#about\">\n            <i className=\"icon-down-circle\" />\n          </a>\n        </p>\n\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  data: PropTypes.object, /* eslint-disable-line */\n};\n\nHeader.defaultProps = {\n  data: {\n    social: [],\n  },\n};\n\nexport default Header;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Footer extends PureComponent {\n  render() {\n    const { data } = this.props;\n    const networks = data.social.map((network) => (\n      <li key={network.name}>\n        <a href={network.url}>\n          <i className={network.className} />\n        </a>\n      </li>\n    ));\n\n    return (\n      <footer>\n\n        <div className=\"row\">\n          <div className=\"twelve columns\">\n            <ul className=\"social-links\">\n              {networks}\n            </ul>\n\n            <ul className=\"copyright\">\n              <li>&copy; Copyright 2020 Scofield Guo</li>\n            </ul>\n\n          </div>\n          <div id=\"go-top\">\n            <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n              <i className=\"icon-up-open\" />\n            </a>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  data: PropTypes.object, /* eslint-disable-line */\n};\n\nFooter.defaultProps = {\n  data: { social: [] },\n};\n\nexport default Footer;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass About extends PureComponent {\n  render() {\n    const { data } = this.props;\n    const {\n      email, image, bio, address,\n    } = data;\n    const profilepic = (image && `${process.env.PUBLIC_URL}/images/${image}`) || \"\";\n    const { home, city } = address;\n\n    return (\n      <section id=\"about\">\n        <div className=\"row\">\n          <div className=\"three columns\">\n            <img className=\"profile-pic\" src={profilepic} alt=\"avatar\" />\n          </div>\n          <div className=\"nine columns main-col\">\n            <h2>About Me</h2>\n            <p>{bio}</p>\n            <div className=\"row\">\n              <div className=\"columns contact-details\">\n                <h2>Contact Details</h2>\n                <p className=\"address\">\n                  <span className=\"fa fa-home\" />\n                  {\" \"}\n                  <span>{home}</span>\n                  <br />\n                  <span className=\"fa fa-map-marker\" />\n                  {\" \"}\n                  <span>{city}</span>\n                  <br />\n                  <span className=\"fa fa-envelope\" />\n                  {\" \"}\n                  <span>{email}</span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nAbout.propTypes = {\n  data: PropTypes.object, /* eslint-disable-line */\n};\n\nAbout.defaultProps = {\n  data: { address: {} },\n};\n\nexport default About;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Resume extends PureComponent {\n  render() {\n    const { data } = this.props;\n    const {\n      educations, works, skills,\n    } = data;\n    const educationComponent = educations.map((education) => (\n      <div key={education.school}>\n        <h3>{education.school}</h3>\n        <p className=\"info\">\n          {education.degree}\n          {\" \"}\n          <span>&bull;</span>\n          <em className=\"date\">{education.graduated}</em>\n        </p>\n        <p>{education.description}</p>\n      </div>\n    ));\n    const workComponent = works.map((work) => (\n      <div key={work.company}>\n        <h3>{work.company}</h3>\n        <p className=\"info\">\n          {work.title}\n          <span>&bull;</span>\n          {\" \"}\n          <em className=\"date\">{work.years}</em>\n          <span>&bull;</span>\n          {\" \"}\n          <em>\n            <span className=\"fa fa-map-marker\" />\n            {\" \"}\n            {work.location}\n          </em>\n        </p>\n        <p>{work.description}</p>\n      </div>\n    ));\n    const skillsComponent = skills.map((skill) => {\n      const className = `bar-expand ${skill.name.toLowerCase()}`;\n      return (\n        <li key={skill.name}>\n          <span style={{ width: skill.level }} className={className} />\n          <em>{skill.name}</em>\n        </li>\n      );\n    });\n\n    return (\n      <section id=\"resume\">\n        <div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1><span>Education</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n              <div className=\"twelve columns\">\n                {educationComponent}\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1><span>Work</span></h1>\n          </div>\n          <div className=\"nine columns main-col\">\n            {workComponent}\n          </div>\n        </div>\n\n        <div className=\"row skill\">\n          <div className=\"three columns header-col\">\n            <h1><span>Skills</span></h1>\n          </div>\n          <div className=\"nine columns main-col\">\n            <div className=\"bars\">\n              <ul className=\"skills\">{skillsComponent}</ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nResume.propTypes = {\n  data: PropTypes.object, /* eslint-disable-line */\n};\n\nResume.defaultProps = {\n  data: {\n    educations: [],\n    works: [],\n    skills: [],\n  },\n};\n\nexport default Resume;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Portfolio extends PureComponent {\n  handleProjectJump = (url) => {\n    if (!url) {\n      console.log('unknown url');\n      return;\n    }\n    window.open(url);\n  }\n\n  render() {\n    const { data } = this.props;\n    const projects = data.projects.map((project) => {\n      const projectImage = `${process.env.PUBLIC_URL}/images/portfolio/${project.image}`;\n      return (\n        <div key={project.title} className=\"columns portfolio-item\">\n          <div className=\"item-wrap\">\n            <span href={project.url} title={project.title} onClick={() => this.handleProjectJump(project.url)}>\n              <img alt={project.title} src={projectImage} />\n              <div className=\"overlay\">\n                <div className=\"portfolio-item-meta\">\n                  <h5>{project.title}</h5>\n                  <p>{project.category}</p>\n                </div>\n              </div>\n              <div className=\"link-icon\"><i className=\"fa fa-link\" /></div>\n            </span>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>Check Out Some of My/Participated Works.</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n              {projects}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nPortfolio.propTypes = {\n  data: PropTypes.object, /* eslint-disable-line */\n};\n\nPortfolio.defaultProps = {\n  data: { projects: [] },\n};\n\nexport default Portfolio;\n","import React, { Component } from \"react\";\n\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport About from \"./Components/About\";\nimport Resume from \"./Components/Resume\";\nimport Portfolio from \"./Components/Portfolio\";\nimport infos from './resumeData.json';\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resumeData: infos,\n    };\n  }\n\n  render() {\n    const { resumeData } = this.state;\n    return (\n      <div className=\"App\">\n        <Header data={resumeData.main} />\n        <About data={resumeData.main} />\n        <Resume data={resumeData.resume} />\n        <Portfolio data={resumeData.portfolio} />\n        <Footer data={resumeData.main} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\"\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === \"[::1]\"\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \"\n                  + \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \"\n              + \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}